# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

name: $(date:yyyyMMdd)$(rev:.r)

trigger:
  branches:
    exclude:
    - master

variables:
  shouldDeploy: true
  BuildConfiguration: Release

pool:
  name: Default
  demands:
    - msbuild
    - visualstudio

jobs:
- job: General_Build
  steps:
  # ...
  # Use NuGet 5.x
  - task: NuGetToolInstaller@0
    displayName: 'Use NuGet 5.x'
    inputs:
      versionSpec: 5.x
  # ...
  # Restore NuGet packages.
  - task: NuGetCommand@2
    displayName: 'NuGet restore'
    inputs:
      feedsToUse: config
  # ...
  # Version with GitVersion
  - task: gitversion/setup@0
    displayName: Install GitVersion
    inputs:
      versionSpec: '5.x'
  - task: gitversion/execute@0
    displayName: Execute GitVersion
  # ...
  # Prepare analysis on SonarCloud
  - task: SonarSource.sonarcloud.14d9cde6-c1da-4d55-aa01-2965cd301255.SonarCloudPrepare@1
    displayName: 'Prepare analysis on SonarCloud'
    inputs:
      SonarCloud: AsyncHubCloud
      organization: 'async-hub'
      projectKey: AuthZI
      projectName: AuthZI
  # ...
  # Build Solution
  - task: VSBuild@1
    displayName: 'Build solution AuthZI.sln'
    inputs:
      solution: AuthZI.sln
      platform: 'any cpu'
      configuration: release
      clean: true
  # ...
  # Run Tests
  - task: DotNetCoreCLI@2
    displayName: 'Run Tests'
    inputs:
      command: test
      projects: |
        test/Authzi.Security.IntegrationTests/Authzi.Security.IntegrationTests.fsproj
        publishTestResults: true
  # ...
  # Run Code Analysis
  - task: SonarSource.sonarcloud.ce096e50-6155-4de8-8800-4221aaeed4a1.SonarCloudAnalyze@1
    displayName: 'Run Code Analysis'
  # ...
  # Pass $(GitVersion.SemVer) to the next job
  - powershell: echo "##vso[task.setvariable variable=GitVersionSemVer;isOutput=true]$env:GITVERSION_SEMVER"
    displayName: 'Pass $(GitVersion.SemVer) to the next job'
    name: gitVersionNumber
  # ...
  # Print SemVer Number
  - script: echo $(GitVersion.SemVer)
    displayName: 'Print SemVer Number'
  # ...

# Deploy to the CI feed (https://pkgs.dev.azure.com/async-hub/AuthZI/_packaging/AuthZI/nuget/v3/index.json).
- job: Deploy_Packages_CI_Feed
  dependsOn: General_Build
  variables:
    - group: Default
    - name: GitVersion.SemVer
      value: $[ dependencies.General_Build.outputs['gitVersionNumber.GitVersionSemVer'] ]
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  steps:
  # ...
  # NuGet pack AuthZI.Build.sln
  - task: DotNetCoreCLI@2
    displayName: 'NuGet pack AuthZI.Build.sln'
    inputs:
      command: pack
      packagesToPack: AuthZI.Build.sln
      includesymbols: true
      includesource: true
      versioningScheme: byEnvVar
      versionEnvVar: GitVersion.SemVer
      buildProperties: 'SourceLinkCreate=true'
  # ...
  # Push NuGet packs to Azure Artifacts feed
  - task: NuGetCommand@2
    displayName: 'NuGet push to Azure Artifacts'
    inputs:
      command: push
      publishVstsFeed: 'AuthZI/AuthZI'
      allowPackageConflicts: true
    continueOnError: true
  # ...
  # Index source code and publish symbols to Azure Artifacts symbol server
  # https://docs.microsoft.com/en-us/azure/devops/pipelines/artifacts/symbols?view=azure-devops#set-up-the-publish-task
  - task: PublishSymbols@2
    inputs:
      symbolsFolder: '$Build.SourcesDirectory/src'
      indexSources: false
      publishSymbols: true
      symbolServerType: teamServices