# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

name: $(date:yyyyMMdd)$(rev:.r)

trigger:
  - master

variables:
  shouldDeploy: true
  BuildConfiguration: Release

stages:
  - stage: Build
    displayName: Build stage
    pool:
      name: Azure Pipelines
    variables:
      - group: Default
    jobs:
    - job: Build_Solution
      displayName: Whole solution build process
      steps:
      - task: DotNetCoreCLI@2
        displayName: 'Build solution AuthZI.sln'
        inputs:
          command: build
          projects: 'AuthZI.sln'
          configuration: '$(buildConfiguration)'

      # Run Tests
      - task: DotNetCoreCLI@2
        displayName: 'Run Integration Tests'
        inputs:
          command: test
          projects: |
            test/Authzi.Security.IntegrationTests
            test/Authzi.Tests.MicrosoftOrleans/DuendeSoftware.IdentityServer
            test/Authzi.Tests.MicrosoftOrleans/MicrosoftEntra/MicrosoftEntraID.NET8.0
            test/Authzi.Tests.MicrosoftOrleans/MicrosoftEntra/MicrosoftEntraExternalID.NET8.0
            publishTestResults: true
        env: 
          microsoftEntraIdCredentials: $(MICROSOFT_ENTRA_ID_CREDENTIALS)
          microsoftEntraExternalIdCredentials: $(MICROSOFT_ENTRA_EXTERNAL_ID_CREDENTIALS)

##################### Packing Artifacts Stage #####################

  - stage: Packing_Artifacts
    displayName: Packing artifacts stage
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    jobs:
    - deployment: Deploy_Artifacts_Testing
      displayName: Deploy testing artifacts in Azure Artifacts
      pool:
        name: Azure Pipelines
      environment: 'Testing'
      strategy: 
        runOnce:
          deploy:
            steps:
            # Version with GitVersion
            - task: gitversion/setup@0
              displayName: Install GitVersion
              inputs:
                versionSpec: '5.x'
            - task: gitversion/execute@0
              displayName: Execute GitVersion
            # Print SemVer Number
            - script: echo $(GitVersion.SemVer)
              displayName: 'Print SemVer Number'
            # NuGet pack AuthZI.Build.sln
            - task: DotNetCoreCLI@2
              displayName: 'NuGet pack AuthZI.Build.sln'
              inputs:
                command: pack
                packagesToPack: AuthZI.Build.sln
                includesymbols: true
                includesource: true
                versioningScheme: byEnvVar
                versionEnvVar: GitVersion.SemVer
                buildProperties: 'SourceLinkCreate=true'
            # ...
            # Push NuGet packs to Azure Artifacts feed
            - task: NuGetCommand@2
              displayName: 'NuGet push to Azure Artifacts: Testing'
              inputs:
                command: push
                publishVstsFeed: 'AuthZI/Testing'
                allowPackageConflicts: true
              continueOnError: true
          #   # ...
          #   # Index source code and publish symbols to Azure Artifacts symbol server
          #   # https://docs.microsoft.com/en-us/azure/devops/pipelines/artifacts/symbols?view=azure-devops#set-up-the-publish-task
          #   - task: PublishSymbols@2
          #     displayName: 'Publish symbols path'
          #     inputs:
          #       SymbolsFolder: '$(Build.SourcesDirectory)/src'
          #       SymbolServerType: TeamServices
          #       indexSources: false
          #       publishSymbols: true